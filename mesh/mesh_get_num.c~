# include <stdlib.h>
# include <stdio.h>
# include <string.h>
int mesh_get_num ( char *code, int nelemx, int nelemy, int element_num, int element_order, int node_num )

/******************************************************************************/
/*
  Purpose:

    GRID_ELEMENT_NUM returns the number of elements, number of order and number of nodes .

   List:

    I  ELEMENT_TYPE   Definition
    -  ------------   ----------
    1  T3             3 node linear triangle;
    2  T4             4 node cubic bubble triangle
    3  T6             6 node quadratic triangle;
    4  T10            10 node cubic triangle.
    5  Q4             4 node linear Lagrange/serendipity quadrilateral;
    6  Q8             8 node quadratic serendipity quadrilateral;
    7  Q9             9 node quadratic Lagrange quadrilateral;
    8  Q12            12 node cubic serendipity quadrilateral;
    9  Q16            16 node cubic Lagrange quadrilateral;  
*/

{
  int element_num;

  if ( strcmp(code,"T3") == 0 )
  {
    element_num = 2 * nelemx * nelemy;
    element_order = 3;
    node_num = ( nelemx + 1 ) * ( nelemy + 1 );
  }
  else if ( strcmp(code,"T4") == 0 )
  {
    element_num = 2 * nelemx * nelemy;
    element_order = 4;
    node_num = ( nelemx + 1 ) * ( nelemy + 1 ) + 2 * nelemx * nelemy;
  }
  else if ( strcmp(code,"T6") == 0 )
  {
    element_num = 2 * nelemx * nelemy;
    element_order = 6;
    node_num = ( 2 * nelemx + 1 ) * ( 2 * nelemy + 1 );
  }
  else if ( strcmp(code,"T10") == 0 )
  {
    element_num = 2 * nelemx * nelemy;
    element_order = 10;
    node_num = ( 3 * nelemx + 1 ) * ( 3 * nelemy + 1 );
  }
  else if ( strcmp(code,"Q4") == 0 )
  {
    element_num = nelemx * nelemy;
    element_order = 4;
    node_num = ( nelemx + 1 ) * ( nelemy + 1 );
  }
  else if ( strcmp(code,"Q8") == 0)
  {
    element_num = nelemx * nelemy;
    element_order = 8;
    node_num = 3 * nelemx * nelemy + 2 * nelemx + 2 * nelemy + 1;
  }
  else if ( strcmp(code,"Q9") == 0 )
  {
    element_num = nelemx * nelemy;
    element_order = 9;
    node_num = ( 2 * nelemx + 1 ) * ( 2 * nelemy + 1 );
  }
  else if ( strcmp(code,"Q12") == 0 )
  {
    element_num = nelemx * nelemy;
    element_order = 12;
    node_num = 5 * nelemx * nelemy + 3 * nelemx + 3 * nelemy + 1;
  }
  else if ( strcmp(code,"Q16") == 0 )
  {
    element_num = nelemx * nelemy;
    element_order = 16;
    node_num = ( 3 * nelemx + 1 ) * ( 3 * nelemy + 1 );
  }
  else
  {
    printf ("\n" );
    printf ("GRID_ELEMENT_NUM - Fatal error!\n" );
    printf ("  Illegal value of CODE = \"%s\".\n", code );
    element_num = -1;
    element_order = -1;
    node_num = -1;
    printf("\n element_num: %d\n",element_num);
    printf("\n element_order %d\n",element_order);    
    printf("\n node_num: %d\n",node_num);
    exit ( 1 );
  }

  return element_num;
}
