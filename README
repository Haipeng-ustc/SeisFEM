################################################################################################
#											       #
#  The seisfem is a 2D Finite Element code to simulate the elastic wave propagation problem,   #
#  which is developed by Haipeng Li. All the algorithm design is finished during my study      #
#  at University of Tulsa in Jingyi Chen's group and the code is rewritten into c during my    #
#  later study.					       #
#  If you have any problem, please contact me by email: haipengl@mail.ustc.edu.cn              #
#											       #
################################################################################################

Here is a brief description of every folder

################################################################################################

assemble: Assemble the mass and stiffness matrices, all the matrices are stored in csr format.
	  csr: compressed sparse row 
 
	  you can use different element type and here is the element type list:

   	 I  ELEMENT_TYPE   Definition
    	 -  ------------   ----------
    	 1  T3             3 node linear triangle;
         2  T6             6 node quadratic triangle;
         3  T10            10 node cubic triangle.
         4  Q4             4 node linear Lagrange/serendipity quadrilateral;
         5  Q9             9 node quadratic Lagrange quadrilateral;
         6  Q16            16 node cubic Lagrange quadrilateral;  
	
   Note: please do not use T10 and Q16 element types, because they requires too many memories and 
	 take ages to finish the simulation.

################################################################################################

backup: Some old codes, just in case need to use them one day.

################################################################################################

Doc: Some materials about finite element. 

################################################################################################

Example:  Some examples are provided here, you can tell their simulation type by their names:
	 
	  example1_first_order_triangular_mesh
	  example2_first_order_quadrilateral_mesh
 	  example3_second_order_triangular_mesh
          example4_second_order_quadrilateral_mesh
	  example5_use_exterior_mesh
	  example6_surface_wave
          example7_topography_surface

################################################################################################

femlib: Finite element method library from: https://people.sc.fsu.edu/~jburkardt/f_src/f_src.html.
        Both fortran and c libraries are includes here, which are very helpful for the beginner 
	of finite element method and guide you to write finite element code.

################################################################################################

mesh: Mesh the computational domain use the structured mesh scheme. If you want use an
      unstructured mesh scheme, please refer to the EXAMPLE/example7_topography_surface. 
      You can generate the mesh by your self and run the simulation. 

################################################################################################

model_elastic_parameters: Define velocity and density file for structured mesh schemes.
			  If you want use an unstructured mesh scheme, you need to define
			  velocity and density file by yourself according the your mesh schemes. 
			  Please refer the EXAMPLE/example7_topography_surface

################################################################################################

openmp: An example to show how to use openmp and it is not related with other functions.

################################################################################################

pml: Set absorbing boundary condition. I use M-PML developed by myself. You can modified this 
     code to get PML or C-PML damping profiles, and some corresponding modification need to made
     in folder: time_evolution/elastic_wave.c.

################################################################################################

seisfem: Main function to call all other functions to finish the simulation.

################################################################################################

shape: Shape functions for different type elements. 

################################################################################################

solver: Some packages for solver the linear system, including SuperLU_5.2.1 and pardiso packages.
	But I would like to recommend to use the mass-lumped to solve the linear equation.
 	Although mass-lumped technique may cause long-time simulation unstable problem, 
	you can carefully choose the time step to avoid this problem.

	SOLVER_TYPE List:
    	I  SOLVER_TYPE   Definition
    	-  ------------   ----------
   	1  pardiso        Require license and only valid for username: haipeng;
    	2  mgmres         Generalized Minimum Residual (GMRES) algorithm, CSR format;
    	3  masslump       Mass lump technique.

  Note: pardiso packages require license. You need to get your own license and replace 
	pardiso packages using your own packages and license, which you can get from:
	https://www.pardiso-project.org

################################################################################################

source_receiver: The Ricker wavelet function, source and receiver location      

################################################################################################

sparse_matrix: Some functions to deal with sparse matrix operations.
      	  
################################################################################################

time_evolution:  Most important part! Solve the elastic wave equation with M-PML, 
		 update the wave filed and save wavefiled and seismogram files.  

################################################################################################

Note: Please read README file before you run every example!
      The seisfem code is not that robust and there are some technique tricks need close attention
      paid to get things work well. 


################################################################################################













